// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NakhleNakhoda.Data;

#nullable disable

namespace NakhleNakhoda.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230318155406_Mig_EditeJoziyat")]
    partial class Mig_EditeJoziyat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.DargahPardakht", b =>
                {
                    b.Property<int>("DargahPardakht_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DargahPardakht_ID"));

                    b.Property<string>("DargahPardakht_Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DargahPardakht_NameBank")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DargahPardakht_ID");

                    b.ToTable("dargahPardakhts");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.EmkanatHotel", b =>
                {
                    b.Property<int>("Emkanat_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Emkanat_ID"));

                    b.Property<string>("Emkanat_Icon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Emkanat_IdHotel")
                        .HasColumnType("int");

                    b.Property<string>("Emkanat_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Emkanat_ID");

                    b.HasIndex("Emkanat_IdHotel");

                    b.ToTable("emkanatHotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.Hotels", b =>
                {
                    b.Property<int>("Hotel_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Hotel_ID"));

                    b.Property<bool>("Faal")
                        .HasColumnType("bit");

                    b.Property<long>("Jozeyat_Gheymat")
                        .HasColumnType("bigint");

                    b.Property<string>("Name_Hotel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tozihat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ZamanPayan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ZamanShoroa")
                        .HasColumnType("datetime2");

                    b.HasKey("Hotel_ID");

                    b.ToTable("hotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.JozeyatHotel", b =>
                {
                    b.Property<int>("Jozeyat_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Jozeyat_ID"));

                    b.Property<int>("Jozeyat_HotelID")
                        .HasColumnType("int");

                    b.Property<int>("Jozeyat_Teadad")
                        .HasColumnType("int");

                    b.Property<int>("Jozeyat_TedadStareID")
                        .HasColumnType("int");

                    b.Property<int>("Jozeyat_TedadTakhtID")
                        .HasColumnType("int");

                    b.Property<int>("Jozeyat_ZarfiatOtaghID")
                        .HasColumnType("int");

                    b.HasKey("Jozeyat_ID");

                    b.HasIndex("Jozeyat_HotelID");

                    b.HasIndex("Jozeyat_TedadStareID");

                    b.HasIndex("Jozeyat_TedadTakhtID");

                    b.HasIndex("Jozeyat_ZarfiatOtaghID");

                    b.ToTable("jozeyatHotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.Nazarat", b =>
                {
                    b.Property<int>("Nazarat_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Nazarat_ID"));

                    b.Property<string>("Nazarat_Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Nazarat_Emtyaz")
                        .HasColumnType("int");

                    b.Property<int>("Nazarat_HotelID")
                        .HasColumnType("int");

                    b.Property<string>("Nazarat_Matn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nazarat_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nazarat_Zaman")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Nazarat_ID");

                    b.HasIndex("Nazarat_HotelID");

                    b.ToTable("nazarats");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.PardakhtHotel", b =>
                {
                    b.Property<int>("Pardakh_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Pardakh_ID"));

                    b.Property<int>("Pardakh_IDHotel")
                        .HasColumnType("int");

                    b.Property<long>("Pardakh_Mablagh")
                        .HasColumnType("bigint");

                    b.Property<string>("Pardakh_Marjaa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pardakh_Pigiry")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Pardakh_Rezerv")
                        .HasColumnType("int");

                    b.Property<string>("Pardakh_Trakonesh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Pardakh_Vazeiat")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Pardakh_ZamanVariz")
                        .HasColumnType("datetime2");

                    b.HasKey("Pardakh_ID");

                    b.HasIndex("Pardakh_IDHotel");

                    b.HasIndex("Pardakh_Rezerv");

                    b.ToTable("pardakhtHotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.RezervHotel", b =>
                {
                    b.Property<int>("Rezerv_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rezerv_ID"));

                    b.Property<string>("Rezerv_Codemeli")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Rezerv_Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rezerv_IDHotel")
                        .HasColumnType("int");

                    b.Property<string>("Rezerv_IP")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rezerv_Jensiat")
                        .HasColumnType("int");

                    b.Property<DateTime>("Rezerv_Khoroj")
                        .HasColumnType("datetime2");

                    b.Property<long>("Rezerv_Mablagh")
                        .HasColumnType("bigint");

                    b.Property<string>("Rezerv_Mobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Rezerv_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Rezerv_NameKhanevadgi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Rezerv_Roz")
                        .HasColumnType("int");

                    b.Property<int>("Rezerv_TeadadNafarat")
                        .HasColumnType("int");

                    b.Property<int>("Rezerv_TeadadOthagh")
                        .HasColumnType("int");

                    b.Property<bool>("Rezerv_Vazeyt")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Rezerv_Vorod")
                        .HasColumnType("datetime2");

                    b.HasKey("Rezerv_ID");

                    b.ToTable("rezervHotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.TanzimatEmail", b =>
                {
                    b.Property<int>("Eamil_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Eamil_ID"));

                    b.Property<string>("Eamil_EmailSend")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Eamil_Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Eamil_Port")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Eamil_Smtp")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Eamil_UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Eamil_ID");

                    b.ToTable("tanzimatEmails");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.TasvirHotel", b =>
                {
                    b.Property<int>("Tasavir_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Tasavir_ID"));

                    b.Property<bool>("Tasavir_Asli")
                        .HasColumnType("bit");

                    b.Property<int>("Tasavir_IDHotel")
                        .HasColumnType("int");

                    b.Property<string>("Tasavir_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Tasavir_ID");

                    b.HasIndex("Tasavir_IDHotel");

                    b.ToTable("tasavirHotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.TedadStareh", b =>
                {
                    b.Property<int>("TedadStareh_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TedadStareh_ID"));

                    b.Property<string>("TedadStareh_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TedadStareh_ID");

                    b.ToTable("tedadStarehs");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.TedadTakhtHotel", b =>
                {
                    b.Property<int>("TedadTakh_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TedadTakh_ID"));

                    b.Property<string>("TedadTakh_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("TedadTakh_ID");

                    b.ToTable("tedadTakhtHotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.ZarfyatOtaghHotel", b =>
                {
                    b.Property<int>("ZarfyatOtagh_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZarfyatOtagh_ID"));

                    b.Property<string>("ZarfyatOtagh_Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ZarfyatOtagh_ID");

                    b.ToTable("zarfyatOtaghHotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.ViewModel.Jostejo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<long>("GheymatYekShab")
                        .HasColumnType("bigint");

                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<string>("NameHotel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stareh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Jostejo");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.BookFacility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("RoomFacilityId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserBookId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoomFacilityId");

                    b.HasIndex("UserBookId");

                    b.ToTable("BookFacility", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.BookRoomCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("BookDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoomCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<int>("RoomPrice")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserBookId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoomCategoryId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserBookId");

                    b.ToTable("BookRoomCategory", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.Payment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoomCategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomCategoryId");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.RoomCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RoomCategory", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.RoomFacility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RoomFacility", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.UserBook", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PaymentId")
                        .HasColumnType("bigint");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("QtyAdult")
                        .HasColumnType("int");

                    b.Property<int>("QtyBaby")
                        .HasColumnType("int");

                    b.Property<int>("QtyChild")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("PaymentId");

                    b.ToTable("UserBook", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.Member", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CannotLoginUntilDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("IdentifierNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastIpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLoginDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Otp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OtpExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<long>("PictureId")
                        .HasColumnType("bigint");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShebaNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.MemberClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.MemberLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.MemberRole", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.MemberToken", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Media.Picture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AltAttribute")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("SeoFilename")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("TitleAttribute")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("VirtualPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Picture", (string)null);
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Media.PictureBinary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("BinaryData")
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("PictureId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PictureId")
                        .IsUnique();

                    b.ToTable("PictureBinary");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.EmkanatHotel", b =>
                {
                    b.HasOne("NakhleNakhoda.Data.Models.DB.Hotels", "HotelEmkanat")
                        .WithMany("EmkanatHotels")
                        .HasForeignKey("Emkanat_IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelEmkanat");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.JozeyatHotel", b =>
                {
                    b.HasOne("NakhleNakhoda.Data.Models.DB.Hotels", "Hoteljoz")
                        .WithMany("JozeyatHotels")
                        .HasForeignKey("Jozeyat_HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NakhleNakhoda.Data.Models.DB.TedadStareh", "TedadStareh")
                        .WithMany("JozeyatStareh")
                        .HasForeignKey("Jozeyat_TedadStareID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NakhleNakhoda.Data.Models.DB.TedadTakhtHotel", "TedadTakhtHotel")
                        .WithMany("JozeyatTakht")
                        .HasForeignKey("Jozeyat_TedadTakhtID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NakhleNakhoda.Data.Models.DB.ZarfyatOtaghHotel", "ZarfyatOtagh")
                        .WithMany("Jozeyats")
                        .HasForeignKey("Jozeyat_ZarfiatOtaghID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hoteljoz");

                    b.Navigation("TedadStareh");

                    b.Navigation("TedadTakhtHotel");

                    b.Navigation("ZarfyatOtagh");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.Nazarat", b =>
                {
                    b.HasOne("NakhleNakhoda.Data.Models.DB.Hotels", "HotelNazar")
                        .WithMany("Nazarats")
                        .HasForeignKey("Nazarat_HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HotelNazar");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.PardakhtHotel", b =>
                {
                    b.HasOne("NakhleNakhoda.Data.Models.DB.Hotels", "HotelPardakht")
                        .WithMany("PardakhtHotels")
                        .HasForeignKey("Pardakh_IDHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NakhleNakhoda.Data.Models.DB.RezervHotel", "RezervHotel")
                        .WithMany("PardakhtHotels")
                        .HasForeignKey("Pardakh_Rezerv")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HotelPardakht");

                    b.Navigation("RezervHotel");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.TasvirHotel", b =>
                {
                    b.HasOne("NakhleNakhoda.Data.Models.DB.Hotels", "Hoteltasvir")
                        .WithMany("TasavirHotels")
                        .HasForeignKey("Tasavir_IDHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hoteltasvir");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.BookFacility", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Catalog.RoomFacility", "RoomFacility")
                        .WithMany()
                        .HasForeignKey("RoomFacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NakhleNakhoda.Domain.Catalog.UserBook", "UserBook")
                        .WithMany("RoomFacilities")
                        .HasForeignKey("UserBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomFacility");

                    b.Navigation("UserBook");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.BookRoomCategory", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Catalog.RoomCategory", "RoomCategory")
                        .WithMany()
                        .HasForeignKey("RoomCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NakhleNakhoda.Domain.Catalog.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NakhleNakhoda.Domain.Catalog.UserBook", "UserBook")
                        .WithMany("BookRoomCategories")
                        .HasForeignKey("UserBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("RoomCategory");

                    b.Navigation("UserBook");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.Room", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Catalog.RoomCategory", "RoomCategory")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RoomCategory");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.UserBook", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Identity.Member", "Member")
                        .WithMany("Reserves")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NakhleNakhoda.Domain.Catalog.Payment", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.MemberClaim", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Identity.Member", "User")
                        .WithMany("UserClaim")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.MemberLogin", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Identity.Member", "User")
                        .WithMany("UserLogin")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.MemberRole", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Identity.Role", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NakhleNakhoda.Domain.Identity.Member", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.MemberToken", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Identity.Member", "User")
                        .WithMany("UserToken")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.RoleClaim", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Identity.Role", "Role")
                        .WithMany("RoleClaim")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Media.PictureBinary", b =>
                {
                    b.HasOne("NakhleNakhoda.Domain.Media.Picture", "Picture")
                        .WithOne("PictureBinary")
                        .HasForeignKey("NakhleNakhoda.Domain.Media.PictureBinary", "PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.Hotels", b =>
                {
                    b.Navigation("EmkanatHotels");

                    b.Navigation("JozeyatHotels");

                    b.Navigation("Nazarats");

                    b.Navigation("PardakhtHotels");

                    b.Navigation("TasavirHotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.RezervHotel", b =>
                {
                    b.Navigation("PardakhtHotels");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.TedadStareh", b =>
                {
                    b.Navigation("JozeyatStareh");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.TedadTakhtHotel", b =>
                {
                    b.Navigation("JozeyatTakht");
                });

            modelBuilder.Entity("NakhleNakhoda.Data.Models.DB.ZarfyatOtaghHotel", b =>
                {
                    b.Navigation("Jozeyats");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.RoomCategory", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Catalog.UserBook", b =>
                {
                    b.Navigation("BookRoomCategories");

                    b.Navigation("RoomFacilities");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.Member", b =>
                {
                    b.Navigation("Reserves");

                    b.Navigation("UserClaim");

                    b.Navigation("UserLogin");

                    b.Navigation("UserRole");

                    b.Navigation("UserToken");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Identity.Role", b =>
                {
                    b.Navigation("RoleClaim");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("NakhleNakhoda.Domain.Media.Picture", b =>
                {
                    b.Navigation("PictureBinary");
                });
#pragma warning restore 612, 618
        }
    }
}
